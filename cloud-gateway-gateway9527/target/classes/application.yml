server:
  port: 9527

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由功能，利用微服务名进行路由
      #如下配置是对localhost:8001服务下的/pay/get服务及/pay/lb服务请求，通过路由转发进行请求
      routes:
        #需要路由的服务可以配置多个，但要分开配置
        - id: payment_routh #路由的ID,没有固定的规则但要求唯一，建议配合服务名成进行命名
          #匹配后提供服务的路由地址；
          #当配置开启动态路由后，该值为提供服务的微服务名
          #lb:// 代表启用负载均衡功能,且使用动态路由后，协议必须是lb://
          uri: lb://CLOUD-PAYMENT-SERVICE
          filters:
            - AddRequestParameter=X-Request-Id,1024 #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024
          predicates:
            #断言，路径相匹配的进行路由；
            #该处Path的值是需要路由的方法的uri
            - Path=/pay/**
#            #在指定时间点之后才能访问上面的Path指定的服务
#            #before、between用法与After类似
#            - After=2020-04-09T22:53:42.069+08:00[Asia/Shanghai]
#            - Between=2020-04-09T22:53:42.069+08:00[Asia/Shanghai],2020-04-09T23:53:42.069+08:00[Asia/Shanghai]
#            #Cookie Route Predicate需要两个参数，一个是Cookie Name，一个是正则表达式
#            #路由规则会通过获取对应的Cookie name的值和正则表达式去匹配，如果匹配成功则执行路由，否则不执行
#            #例如：当username=zzyy时才会路由
#            - Cookie=username, zzyy
#            #Header Route Predicate需要两个参数，一个是属性名称，另一个是正则表达式，通过属性名称带来的属性值和正则表达式匹配成功，则进行路由
#            #例如：请求头需要含有X-Request-Id属性，并且该属性的值包含一个或多个数字，才进行路由
#            - Header=X-Request-Id, \d+
#            #Host Route Predicate:接收一组匹配域名列表的参数，每个域名中间以","分割。它通过参数中的主机地址作为匹配规则
#            - Host=**.somehost.org,**.anotherhost.org
#            #Method Route Predicate:接收一个请求方式。请求方式匹配成功，则进行路由
#            - Method=POST
#            #Query Route Predicate:接收一组查询条件。当所有条件都匹配成功后，才能进行路由
#            #例如：需要由username参数，并且参数值为一个或多个数字
#            - Query=username, \d+

eureka:
  instance:
    hostname: cloud-gate-service
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka

